module adder (
     
    input alufn_add[2], // alufn0 and alufn1
    input a[8], // 8bits input
    input b[8],
    
    output s[8], // 8bits output
    
    output z, // it is true if output is 0's
    output v, // it is true if has overflow
    output n // it is ture for negative output
    
    
    
  ) {
  
   sig sum[8];
   sig xb;  //

  always {
  
    case(alufn_add) {
    
      2b00: 
        sum = a + b;
      
      2b01:
        sum = a - b;
      
      2b10:
        sum = a * b;
        
      default: sum = a - b;
      
      }
    
    xb = b[7]^alufn_add; //inverts b if doing sub
    z = (sum == 8b0); 
    v = (a[7] & xb & !(sum[7])) | (!(a[7]) & !(xb) & sum[7]);  
    n = sum[7];
    s = sum;
  }
}
