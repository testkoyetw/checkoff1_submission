/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input cclk,
    output reg spi_miso,
    input spi_ss,
    input spi_mosi,
    input spi_sck,
    output reg [3:0] spi_channel,
    input avr_tx,
    output reg avr_rx,
    input avr_rx_busy,
    input [2:0] button,
    input startbtn,
    input restartbtn,
    output reg [2:0] ledC,
    output reg ledH,
    output reg [2:0] ledclg,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  reg [3:0] M_score0_d, M_score0_q = 1'h0;
  reg [3:0] M_score1_d, M_score1_q = 1'h0;
  wire [3-1:0] M_buttons_button_pressed;
  wire [1-1:0] M_buttons_start_pressed;
  wire [1-1:0] M_buttons_restart_pressed;
  reg [3-1:0] M_buttons_button;
  reg [1-1:0] M_buttons_start;
  reg [1-1:0] M_buttons_restart;
  button_2 buttons (
    .clk(clk),
    .rst(rst),
    .button(M_buttons_button),
    .start(M_buttons_start),
    .restart(M_buttons_restart),
    .button_pressed(M_buttons_button_pressed),
    .start_pressed(M_buttons_start_pressed),
    .restart_pressed(M_buttons_restart_pressed)
  );
  reg [29:0] M_counter_d, M_counter_q = 1'h0;
  reg [7:0] M_lvlCounter_d, M_lvlCounter_q = 1'h0;
  reg [23:0] M_blinkCounter_d, M_blinkCounter_q = 1'h0;
  reg [7:0] M_shift_d, M_shift_q = 1'h0;
  wire [7-1:0] M_seg_seg;
  wire [4-1:0] M_seg_sel;
  reg [16-1:0] M_seg_values;
  multi_seven_seg_3 seg (
    .clk(clk),
    .rst(rst),
    .values(M_seg_values),
    .seg(M_seg_seg),
    .sel(M_seg_sel)
  );
  localparam INIT_sm = 5'd0;
  localparam START_sm = 5'd1;
  localparam CHECKLVL_sm = 5'd2;
  localparam R0_sm = 5'd3;
  localparam Y0_sm = 5'd4;
  localparam B0_sm = 5'd5;
  localparam R1_sm = 5'd6;
  localparam B1_sm = 5'd7;
  localparam Y1_sm = 5'd8;
  localparam B2_0_sm = 5'd9;
  localparam B2_1_sm = 5'd10;
  localparam Y2_sm = 5'd11;
  localparam R2_sm = 5'd12;
  localparam Y3_sm = 5'd13;
  localparam B3_sm = 5'd14;
  localparam R3_sm = 5'd15;
  localparam Y4_0_sm = 5'd16;
  localparam Y4_1_sm = 5'd17;
  localparam B4_sm = 5'd18;
  localparam R4_sm = 5'd19;
  localparam B5_sm = 5'd20;
  localparam Y5_sm = 5'd21;
  localparam R5_sm = 5'd22;
  localparam B6_sm = 5'd23;
  localparam R6_sm = 5'd24;
  localparam Y6_sm = 5'd25;
  localparam R7_0_sm = 5'd26;
  localparam R7_1_sm = 5'd27;
  localparam Y7_sm = 5'd28;
  localparam B7_sm = 5'd29;
  localparam WIN_sm = 5'd30;
  localparam END_sm = 5'd31;
  
  reg [4:0] M_sm_d, M_sm_q = INIT_sm;
  
  wire [8-1:0] M_alu_out;
  wire [1-1:0] M_alu_z;
  wire [1-1:0] M_alu_v;
  wire [1-1:0] M_alu_n;
  reg [6-1:0] M_alu_alufn;
  reg [8-1:0] M_alu_a;
  reg [8-1:0] M_alu_b;
  alu_4 alu (
    .alufn(M_alu_alufn),
    .a(M_alu_a),
    .b(M_alu_b),
    .out(M_alu_out),
    .z(M_alu_z),
    .v(M_alu_v),
    .n(M_alu_n)
  );
  
  always @* begin
    M_sm_d = M_sm_q;
    M_lvlCounter_d = M_lvlCounter_q;
    M_blinkCounter_d = M_blinkCounter_q;
    M_counter_d = M_counter_q;
    M_score1_d = M_score1_q;
    M_score0_d = M_score0_q;
    M_shift_d = M_shift_q;
    
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = 8'h00;
    ledC = 3'h0;
    ledH = 1'h0;
    ledclg = M_shift_q[0+2-:3];
    io_seg = 8'hff;
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
    M_buttons_start = ~startbtn;
    M_buttons_restart = ~restartbtn;
    M_buttons_button = ~button;
    M_alu_alufn = 6'h00;
    M_alu_a = 8'h00;
    M_alu_b = 8'h00;
    io_sel = ~M_seg_sel;
    io_seg = ~M_seg_seg;
    M_seg_values = {M_score1_q[0+3-:4], M_score0_q[0+3-:4], 4'h0, 4'h0};
    
    case (M_sm_q)
      INIT_sm: begin
        M_score0_d = 1'h0;
        M_score1_d = 1'h0;
        M_counter_d = 1'h0;
        M_lvlCounter_d = 5'h1c;
        M_blinkCounter_d = 1'h0;
        M_shift_d = 1'h0;
        if (M_buttons_button_pressed == 3'h1) begin
          M_score1_d = M_score1_q + 1'h1;
          M_alu_alufn = 6'h01;
          M_alu_a = M_lvlCounter_q;
          M_alu_b = 8'h01;
          M_lvlCounter_d = M_alu_out;
          M_sm_d = START_sm;
        end
        if (M_buttons_button_pressed == 3'h2) begin
          M_score1_d = M_score1_q + 2'h2;
          M_alu_alufn = 6'h01;
          M_alu_a = M_lvlCounter_q;
          M_alu_b = 8'h02;
          M_lvlCounter_d = M_alu_out;
          M_sm_d = START_sm;
        end
        if (M_buttons_button_pressed == 3'h4) begin
          M_score1_d = M_score1_q + 2'h3;
          M_alu_alufn = 6'h01;
          M_alu_a = M_lvlCounter_q;
          M_alu_b = 8'h03;
          M_lvlCounter_d = M_alu_out;
          M_sm_d = START_sm;
        end
        if (M_buttons_start_pressed) begin
          M_score1_d = 1'h0;
          M_sm_d = R0_sm;
        end
      end
      START_sm: begin
        if (M_buttons_start_pressed) begin
          M_score1_d = 1'h0;
          M_sm_d = R0_sm;
        end
        if (M_buttons_restart_pressed) begin
          M_score0_d = 1'h0;
          M_score1_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      R0_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[0+0-:1] = 1'h1;
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_counter_q[1+0-:1] == 1'h1 && M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
          ledH = 1'h1;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h01;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              ledH = 1'h0;
              ledC[0+0-:1] = 1'h0;
              M_sm_d = R1_sm;
            end else begin
              ledC[0+0-:1] = 1'h0;
              M_sm_d = Y0_sm;
            end
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      Y0_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[1+0-:1] = 1'h1;
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h02;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            ledC[1+0-:1] = 1'h0;
            M_sm_d = B0_sm;
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      B0_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[2+0-:1] = 1'h1;
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h04;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            ledC = 3'h0;
            M_sm_d = R0_sm;
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      R1_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[0+0-:1] = 1'h1;
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h01;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            ledC[0+0-:1] = 1'h0;
            M_sm_d = B1_sm;
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      B1_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[2+0-:1] = 1'h1;
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h04;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            ledC[2+0-:1] = 1'h0;
            M_sm_d = Y1_sm;
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      Y1_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[1+0-:1] = 1'h1;
        if (M_counter_q[1+0-:1] == 1'h1 && M_score1_q[1+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1 & M_score0_q[1+0-:1] == 1'h1 & M_score0_q[2+0-:1] == 1'h1) begin
          ledH = 1'h1;
        end
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h02;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            if (M_score1_q[1+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1 & M_score0_q[1+0-:1] == 1'h1 & M_score0_q[2+0-:1] == 1'h1) begin
              ledC[1+0-:1] = 1'h0;
              ledH = 1'h0;
              M_sm_d = B2_0_sm;
            end else begin
              ledC[1+0-:1] = 1'h0;
              M_sm_d = R1_sm;
            end
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      B2_0_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[2+0-:1] = 1'h1;
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h04;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            ledC[2+0-:1] = 1'h0;
            M_sm_d = B2_1_sm;
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      B2_1_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[2+0-:1] = 1'h1;
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h04;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            ledC[2+0-:1] = 1'h0;
            M_sm_d = Y2_sm;
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      Y2_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[1+0-:1] = 1'h1;
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h02;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            ledC[1+0-:1] = 1'h0;
            M_sm_d = R2_sm;
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      R2_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[0+0-:1] = 1'h1;
        if (M_counter_q[1+0-:1] == 1'h1 && M_score1_q[0+0-:1] == 1'h1 & M_score1_q[1+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1 & M_score0_q[2+0-:1] == 1'h1) begin
          ledH = 1'h1;
        end
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h01;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            if (M_score1_q[0+0-:1] == 1'h1 & M_score1_q[1+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1 & M_score0_q[2+0-:1] == 1'h1) begin
              ledH = 1'h0;
              ledC[0+0-:1] = 1'h0;
              M_sm_d = Y3_sm;
            end else begin
              ledC = 3'h0;
              M_sm_d = B2_0_sm;
            end
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      Y3_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[1+0-:1] = 1'h1;
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h02;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            ledC[1+0-:1] = 1'h0;
            M_sm_d = B3_sm;
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      B3_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[2+0-:1] = 1'h1;
        if (M_counter_q[1+0-:1] == 1'h1 && M_score1_q[2+0-:1] == 1'h1 && M_score0_q[1+0-:1] == 1'h1 && M_score0_q[2+0-:1] == 1'h1) begin
          M_shift_d = 8'h01;
          ledH = 1'h1;
        end
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h04;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            if (M_score1_q[2+0-:1] == 1'h1 && M_score0_q[1+0-:1] == 1'h1 && M_score0_q[2+0-:1] == 1'h1) begin
              ledH = 1'h0;
              ledC[2+0-:1] = 1'h0;
              M_sm_d = Y4_0_sm;
            end else begin
              ledC[2+0-:1] = 1'h0;
              M_sm_d = R3_sm;
            end
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      R3_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[0+0-:1] = 1'h1;
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h01;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            ledC[0+0-:1] = 1'h1;
            M_sm_d = Y3_sm;
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      Y4_0_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[1+0-:1] = 1'h1;
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h01;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            ledC[1+0-:1] = 1'h0;
            M_sm_d = Y4_1_sm;
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      Y4_1_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[1+0-:1] = 1'h1;
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h01;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            ledC[1+0-:1] = 1'h0;
            M_sm_d = B4_sm;
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      B4_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[2+0-:1] = 1'h1;
        if (M_counter_q[1+0-:1] == 1'h1 && M_score1_q[0+0-:1] == 1'h1 && M_score1_q[2+0-:1] == 1'h1 && M_score0_q[0+0-:1] == 1'h1 && M_score0_q[2+0-:1] == 1'h1) begin
          ledH = 1'h1;
        end
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h04;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            if (M_score1_q[0+0-:1] == 1'h1 && M_score1_q[2+0-:1] == 1'h1 && M_score0_q[0+0-:1] == 1'h1 && M_score0_q[2+0-:1] == 1'h1) begin
              ledH = 1'h0;
              ledC[2+0-:1] = 1'h0;
              M_sm_d = B5_sm;
            end else begin
              ledC[2+0-:1] = 1'h0;
              M_sm_d = R4_sm;
            end
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      R4_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[0+0-:1] = 1'h1;
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h02;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            ledC[0+0-:1] = 1'h1;
            M_sm_d = Y4_0_sm;
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      B5_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[2+0-:1] = 1'h1;
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h04;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            ledC[2+0-:1] = 1'h1;
            M_sm_d = Y5_sm;
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      Y5_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[1+0-:1] = 1'h1;
        if (M_counter_q[1+0-:1] == 1'h1 && M_score1_q[0+0-:1] == 1'h1 && M_score1_q[1+0-:1] == 1'h1 && M_score1_q[2+0-:1] == 1'h1 && M_score0_q[0+0-:1] == 1'h1 && M_score0_q[2+0-:1] == 1'h1) begin
          ledH = 1'h1;
        end
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h01;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            if (M_score1_q[0+0-:1] == 1'h1 && M_score1_q[1+0-:1] == 1'h1 && M_score1_q[2+0-:1] == 1'h1 && M_score0_q[0+0-:1] == 1'h1 && M_score0_q[2+0-:1] == 1'h1) begin
              ledH = 1'h0;
              ledC[1+0-:1] = 1'h0;
              M_sm_d = B6_sm;
            end else begin
              ledC[1+0-:1] = 1'h0;
              M_sm_d = R5_sm;
            end
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      R5_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[0+0-:1] = 1'h1;
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h02;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            ledC[0+0-:1] = 1'h0;
            M_sm_d = B5_sm;
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      B6_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[2+0-:1] = 1'h1;
        M_alu_alufn = 6'h20;
        M_alu_a = 1'h1;
        M_alu_b = 8'h01;
        M_shift_d = M_alu_out;
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h01;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            ledC[2+0-:1] = 1'h0;
            M_sm_d = R6_sm;
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      R6_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[0+0-:1] = 1'h1;
        M_alu_alufn = 6'h20;
        M_alu_a = 1'h1;
        M_alu_b = 8'h01;
        M_shift_d = M_alu_out;
        if (M_counter_q[1+0-:1] == 1'h1 && M_score1_q[3+0-:1] == 1'h1) begin
          ledH = 1'h1;
        end
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h04;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            if (M_score1_q[3+0-:1] == 1'h1) begin
              ledH = 1'h0;
              ledC[0+0-:1] = 1'h0;
              M_sm_d = R7_0_sm;
            end else begin
              ledC[0+0-:1] = 1'h0;
              M_sm_d = Y6_sm;
            end
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      Y6_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[1+0-:1] = 1'h1;
        M_alu_alufn = 6'h20;
        M_alu_a = 1'h1;
        M_alu_b = 8'h01;
        M_shift_d = M_alu_out;
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h02;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            ledC[1+0-:1] = 1'h0;
            M_sm_d = B6_sm;
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      R7_0_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[0+0-:1] = 1'h1;
        M_alu_alufn = 6'h20;
        M_alu_a = 1'h1;
        M_alu_b = 8'h02;
        M_shift_d = M_alu_out;
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h01;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            ledC[0+0-:1] = 1'h1;
            M_sm_d = R7_1_sm;
          end else begin
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      R7_1_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[0+0-:1] = 1'h1;
        M_alu_alufn = 6'h20;
        M_alu_a = 1'h1;
        M_alu_b = 8'h02;
        M_shift_d = M_alu_out;
        if (M_score0_q[3+0-:1] == 1'h0 && M_score0_q[0+0-:1] == 1'h0 && M_score0_q[1+0-:1] == 1'h0 && M_score0_q[2+0-:1] == 1'h0) begin
          M_sm_d = WIN_sm;
        end
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h01;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            ledC[0+0-:1] = 1'h1;
            M_sm_d = Y7_sm;
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      Y7_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[1+0-:1] = 1'h1;
        M_alu_alufn = 6'h20;
        M_alu_a = 1'h1;
        M_alu_b = 8'h02;
        M_shift_d = M_alu_out;
        if (M_counter_q[(M_lvlCounter_q)*1+0-:1] == 1'h1) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h04;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_sm_d = B7_sm;
          end else begin
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      B7_sm: begin
        M_counter_d = M_counter_q + 1'h1;
        ledC[2+0-:1] = 1'h1;
        M_alu_alufn = 6'h20;
        M_alu_a = 1'h1;
        M_alu_b = 8'h02;
        M_shift_d = M_alu_out;
        if (M_counter_q == M_lvlCounter_q) begin
          M_sm_d = END_sm;
        end
        if (M_buttons_button_pressed) begin
          M_alu_alufn = 6'h33;
          M_alu_a = 8'h02;
          M_alu_b = M_buttons_button_pressed;
          if (M_alu_out[0+0-:1]) begin
            if (M_score0_q[3+0-:1] == 1'h1 & M_score0_q[0+0-:1] == 1'h1) begin
              M_score1_d = M_score1_q + 1'h1;
              M_score0_d = 1'h0;
            end else begin
              M_score0_d = M_score0_q + 1'h1;
            end
            M_counter_d = 1'h0;
            ledC = 3'h0;
            M_sm_d = R7_0_sm;
          end else begin
            M_counter_d = 1'h0;
            M_sm_d = END_sm;
          end
        end
        if (M_buttons_restart_pressed) begin
          M_counter_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      WIN_sm: begin
        ledC = 3'h7;
        M_counter_d = M_counter_q + 1'h1;
        M_blinkCounter_d = M_blinkCounter_q + 1'h1;
        if (M_blinkCounter_q[23+0-:1] == 1'h1) begin
          M_seg_values = 16'hffff;
        end else begin
          M_seg_values = 16'h9999;
        end
        if (M_counter_q[28+0-:1] == 1'h1) begin
          M_counter_d = 1'h0;
          M_score0_d = 1'h0;
          M_score1_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
      END_sm: begin
        ledC = 3'h0;
        M_counter_d = M_counter_q + 1'h1;
        M_blinkCounter_d = M_blinkCounter_q + 1'h1;
        if (M_blinkCounter_q[23+0-:1] == 1'h1) begin
          M_seg_values = 16'hffff;
        end else begin
          M_seg_values = {M_score1_q[0+3-:4], M_score0_q[0+3-:4], 4'h0, 4'h0};
        end
        if (M_counter_q[28+0-:1] == 1'h1) begin
          M_counter_d = 1'h0;
          M_score0_d = 1'h0;
          M_score1_d = 1'h0;
          M_sm_d = INIT_sm;
        end
      end
    endcase
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_score0_q <= 1'h0;
      M_score1_q <= 1'h0;
      M_counter_q <= 1'h0;
      M_lvlCounter_q <= 1'h0;
      M_blinkCounter_q <= 1'h0;
      M_shift_q <= 1'h0;
      M_sm_q <= 1'h0;
    end else begin
      M_score0_q <= M_score0_d;
      M_score1_q <= M_score1_d;
      M_counter_q <= M_counter_d;
      M_lvlCounter_q <= M_lvlCounter_d;
      M_blinkCounter_q <= M_blinkCounter_d;
      M_shift_q <= M_shift_d;
      M_sm_q <= M_sm_d;
    end
  end
  
endmodule
